apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app: "{{ .Release.Name }}"
spec:
  serviceName: "{{ .Release.Name }}"
  replicas: {{ .Values.nodes }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      containers:
        - name: trial
          image: "{{ .Values.image }}"
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /sys/fs/cgroup
              name: cgroup
              readOnly: true
            - mountPath: /var/run/dbus/system_bus_socket
              name: dbus-socket
              readOnly: true
            - mountPath: /run
              name: run-tmpfs
            - mountPath: /tmp
              name: tmpfs
            - mountPath: /config
              name: command-configmap
              readOnly: true
          resources:
            requests:
              cpu: {{ include "odp.defaultCpuRequest" . }}
              memory: {{ include "odp.defaultMemoryRequest" . }}
              ephemeral-storage: {{ include "odp.defaultEphemeralRequest" . }}
            limits:
              cpu: {{ include "odp.defaultCpuLimit" . }}
              memory: {{ include "odp.defaultMemoryLimit" . }}
              ephemeral-storage: {{ include "odp.defaultEphemeralLimit" . }}
          env:
            - name: token
              valueFrom:
                secretKeyRef:
                  name: ansible-token
                  key: token
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: Directory
        - name: dbus-socket
          hostPath:
            path: /var/run/dbus/system_bus_socket
            type: Socket
        - name: run-tmpfs
          emptyDir:
            medium: Memory
        - name: tmpfs
          emptyDir:
            medium: Memory
        - name: command-configmap
          configMap:
            name: "{{ .Release.Name }}-command"